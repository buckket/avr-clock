#!/usr/bin/env python3

TIMES_TO_ROTATE = 1

"""
const PROGMEM uint8_t digits[10][8] = {
        { 0x3E, 0x7F, 0x71, 0x59, 0x4D, 0x7F, 0x3E, 0x00 }, // '0'
        { 0x40, 0x42, 0x7F, 0x7F, 0x40, 0x40, 0x00, 0x00 }, // '1'
        { 0x62, 0x73, 0x59, 0x49, 0x6F, 0x66, 0x00, 0x00 }, // '2'
        { 0x22, 0x63, 0x49, 0x49, 0x7F, 0x36, 0x00, 0x00 }, // '3'
        { 0x18, 0x1C, 0x16, 0x53, 0x7F, 0x7F, 0x50, 0x00 }, // '4'
        { 0x27, 0x67, 0x45, 0x45, 0x7D, 0x39, 0x00, 0x00 }, // '5'
        { 0x3C, 0x7E, 0x4B, 0x49, 0x79, 0x30, 0x00, 0x00 }, // '6'
        { 0x03, 0x03, 0x71, 0x79, 0x0F, 0x07, 0x00, 0x00 }, // '7'
        { 0x36, 0x7F, 0x49, 0x49, 0x7F, 0x36, 0x00, 0x00 }, // '8'
        { 0x06, 0x4F, 0x49, 0x69, 0x3F, 0x1E, 0x00, 0x00 }, // '9'
};
"""

input = [0x06, 0x4F, 0x49, 0x69, 0x3F, 0x1E, 0x00, 0x00]

for i in range(0, TIMES_TO_ROTATE):
    output = [0 for x in range(0,8)]
    for j in range(0, 8):
        for k in range(7, -1, -1):
            output[k] |=  (((input[j] >> k) & 1) << (7 - j))
    input = output

print("{{ {0} }}".format(", ".join(["0x{0:02X}".format(digit) for digit in output])))
